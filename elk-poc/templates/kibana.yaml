apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: kibana
spec:
  version: {{ .Values.version }}
  count: {{ .Values.kibana.replicas }}
  elasticsearchRef:
    name: elasticsearch
  http:
    service:
        spec:
            type: ClusterIP
    tls:
      selfSignedCertificate:
        subjectAltNames:
        - dns: kibana-kb-http.{{ .Release.Namespace }}.svc.cluster.local
  podTemplate:
    spec:
      containers:
      - name: kibana
        env:
          - name: NODE_OPTIONS
            value: "--max-old-space-size=2048"
        resources:
          requests:
            memory: 2Gi
            cpu: 2
          limits:
            memory: 2Gi
            cpu: 2
  config:
    server.publicBaseUrl: https://kibana-{{ .Release.Namespace }}.{{ .Values.kibana.base_url }}
    xpack.fleet.registryProxyUrl: http://proxy.unicc.org:80
    xpack.fleet.agents.elasticsearch.hosts: ["https://elasticsearch-es-http.{{ .Release.Namespace }}.svc:9200"]
    xpack.fleet.agents.fleet_server.hosts: ["https://fleet-server-custom-agent-http.{{ .Release.Namespace }}.svc:8220"]
    xpack.fleet.packages:
    - name: system
      version: latest
    - name: elastic_agent
      version: latest
    - name: fleet_server
      version: latest
    - name: kubernetes
      version: 1.21.1
    - name: apm
      version: latest
    - name: log
      version: latest
    xpack.fleet.agentPolicies:
      - name: Fleet Server on ECK policy
        id: eck-fleet-server
        is_default_fleet_server: true
        namespace: default
        monitoring_enabled:
          - logs
          - metrics
        package_policies:
        - name: fleet_server-1
          id: fleet_server-1
          package:
            name: fleet_server
      - name: Elastic LOGS Agent on ECK policy
        id: eck-agent-logs
        namespace: default
        monitoring_enabled:
        - logs
        - metrics
        unenroll_timeout: 900
        is_default: true
        package_policies:
        - name: elastic_agent-1
          id: elastic_agent-1
          package:
            name: elastic_agent
        - name: system-1
          id: system-1
          package:
            name: system
          inputs:
            - type: system/metrics
              enabled: true
              vars:
                - name: system.hostfs
                  value: /hostfs
              streams:
                - data_stream:
                    dataset: system.core
                  enabled: true
                  vars:
                    - name: period
                      value: 20s
            - type: winlog
              enabled: false
        - package:
            name: log
          name: log-1
          inputs:
          - type: logfile
            enabled: true
            streams:
            - data_stream:
                dataset: log.log
              enabled: true
              vars:
              - name: paths
                value:
                - '/var/lib/docker/containers/*/*.log'
#        - name: kubernetes-1
#          package:
#            name: kubernetes
#          inputs:
#          - enabled: true
#            streams:
#              - data_stream:
#                  dataset: kubernetes.apiserver
#                  type: metrics
#                vars:
#                  - name: hosts
#                    value: >-
#                      https://${KUBERNETES_SERVICE_HOST}:${env.KUBERNETES_SERVICE_PORT}
#                  - name: paths
#                    value: '/var/log/containers/*${kubernetes.container.id}.log'
#
#
#
#
#              - data_stream:
#                  dataset: kubernetes.state_node
#                  type: metrics
#                vars:
#                  - name: hosts
#                    value: "kube-state-metrics:8080"
#                  - name: metricsets
#                    value: "state_node"
#            type: kubernetes/metrics
#          inputs:
#            - type: system/metrics
#              enabled: true
#              streams:
#                - data_stream:
#                    dataset: kubernetes.container_logs
#                    type: logs
#                  vars:
#                    - name: paths
#                      value: '/var/log/containers/*${kubernetes.container.id}.log'
#                    - name: custom
#                      value: |
#                        symlinks: true
#
#
#
#          inputs:
#            - name: kubernetes-cluster-metrics
#              condition: ${kubernetes_leaderelection.leader} == true
#              type: kubernetes/metrics
#              use_output: default
#              meta:
#                package:
#                  name: kubernetes
#                  version: 1.21.1
#              data_stream:
#                namespace: default
#              streams:
#                - data_stream:
#                    dataset: kubernetes.apiserver
#                    type: metrics
#                  metricsets:
#                    - apiserver
#                  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
#                  hosts:
#                    - 'https://${env.KUBERNETES_SERVICE_HOST}:${env.KUBERNETES_SERVICE_PORT}'
#                  period: 30s
#                  ssl.certificate_authorities:
#                    - /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
#
#
#
#
#                - data_stream:
#                    dataset: kubernetes.event
#                    type: metrics
#                  metricsets:
#                    - event
#                  period: 10s
#                  add_metadata: true
#                - data_stream:
#                    dataset: kubernetes.state_container
#                    type: metrics
#                  metricsets:
#                    - state_container
#                  add_metadata: true
#                  hosts:
#                    - 'kube-state-metrics:8080'
#                  period: 10s
#                - data_stream:
#                    dataset: kubernetes.state_cronjob
#                    type: metrics
#                  metricsets:
#                    - state_cronjob
#                  add_metadata: true
#                  hosts:
#                    - 'kube-state-metrics:8080'
#                  period: 10s
#                - data_stream:
#                    dataset: kubernetes.state_deployment
#                    type: metrics
#                  metricsets:
#                    - state_deployment
#                  add_metadata: true
#                  hosts:
#                    - 'kube-state-metrics:8080'
#                  period: 10s
#                - data_stream:
#                    dataset: kubernetes.state_node
#                    type: metrics
#                  metricsets:
#                    - state_node
#                  add_metadata: true
#                  hosts:
#                    - 'kube-state-metrics:8080'
#                  period: 10s
#                - data_stream:
#                    dataset: kubernetes.state_persistentvolume
#                    type: metrics
#                  metricsets:
#                    - state_persistentvolume
#                  add_metadata: true
#                  hosts:
#                    - 'kube-state-metrics:8080'
#                  period: 10s
#                - data_stream:
#                    dataset: kubernetes.state_persistentvolumeclaim
#                    type: metrics
#                  metricsets:
#                    - state_persistentvolumeclaim
#                  add_metadata: true
#                  hosts:
#                    - 'kube-state-metrics:8080'
#                  period: 10s
#                - data_stream:
#                    dataset: kubernetes.state_pod
#                    type: metrics
#                  metricsets:
#                    - state_pod
#                  add_metadata: true
#                  hosts:
#                    - 'kube-state-metrics:8080'
#                  period: 10s
#                - data_stream:
#                    dataset: kubernetes.state_replicaset
#                    type: metrics
#                  metricsets:
#                    - state_replicaset
#                  add_metadata: true
#                  hosts:
#                    - 'kube-state-metrics:8080'
#                  period: 10s
#                - data_stream:
#                    dataset: kubernetes.state_resourcequota
#                    type: metrics
#                  metricsets:
#                    - state_resourcequota
#                  add_metadata: true
#                  hosts:
#                    - 'kube-state-metrics:8080'
#                  period: 10s
#                - data_stream:
#                    dataset: kubernetes.state_service
#                    type: metrics
#                  metricsets:
#                    - state_service
#                  add_metadata: true
#                  hosts:
#                    - 'kube-state-metrics:8080'
#                  period: 10s
#                - data_stream:
#                    dataset: kubernetes.state_statefulset
#                    type: metrics
#                  metricsets:
#                    - state_statefulset
#                  add_metadata: true
#                  hosts:
#                    - 'kube-state-metrics:8080'
#                  period: 10s
#                - data_stream:
#                    dataset: kubernetes.state_storageclass
#                    type: metrics
#                  metricsets:
#                    - state_storageclass
#                  add_metadata: true
#                  hosts:
#                    - 'kube-state-metrics:8080'
#                  period: 10s
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
