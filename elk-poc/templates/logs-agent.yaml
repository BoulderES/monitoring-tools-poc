apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: elastic-agent-logs
spec:
  version: 8.3.2
  kibanaRef:
    name: kibana
  fleetServerRef:
    name: fleet-server
  mode: fleet
  daemonSet:
    podTemplate:
      spec:
        serviceAccountName: elastic-agent-logs
        automountServiceAccountToken: true
        securityContext:
          runAsUser: 0
        containers:
        - name: agent
          args:
          - -e
          - -c
          - /etc/beat.yml
          - -system.hostfs=/hostfs
          volumeMounts:
          - mountPath: /var/lib/docker/containers
            name: varlibdockercontainers
          - mountPath: /var/log/containers
            name: varlogcontainers
          - mountPath: /var/log/pods
            name: varlogpods
          - mountPath: /hostfs/sys/fs/cgroup
            name: cgroup
          - mountPath: /var/run/docker.sock
            name: dockersock
          - mountPath: /hostfs/proc
            name: proc
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        volumes:
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: varlogcontainers
          hostPath:
            path: /var/log/containers
        - name: varlogpods
          hostPath:
            path: /var/log/pods
        - hostPath:
            path: /sys/fs/cgroup
          name: cgroup
        - hostPath:
            path: /var/run/docker.sock
          name: dockersock
        - hostPath:
            path: /proc

#    podTemplate:
#      spec:
#        serviceAccountName: metricbeat
#        automountServiceAccountToken: true # some older Beat versions are depending on this settings presence in k8s context
#        containers:
#        - args:
#          - -e
#          - -c
#          - /etc/beat.yml
#          - -system.hostfs=/hostfs
#          name: metricbeat
#          volumeMounts:
#          - mountPath: /hostfs/sys/fs/cgroup
#            name: cgroup
#          - mountPath: /var/run/docker.sock
#            name: dockersock
#          - mountPath: /hostfs/proc
#            name: proc
#          env:
#          - name: NODE_NAME
#            valueFrom:
#              fieldRef:
#                fieldPath: spec.nodeName
#        dnsPolicy: ClusterFirstWithHostNet
#        hostNetwork: true # Allows to provide richer host metadata
#        securityContext:
#          runAsUser: 0
#        terminationGracePeriodSeconds: 30
#        volumes:
#        - hostPath:
#            path: /sys/fs/cgroup
#          name: cgroup
#        - hostPath:
#            path: /var/run/docker.sock
#          name: dockersock
#        - hostPath:
#            path: /proc
#          name: proc

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: elastic-agent-logs
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: elastic-agent-logs
rules:
- apiGroups: [""]
  resources:
  - pods
  - nodes
  - namespaces
  - events
  - services
  - configmaps
  verbs:
  - get
  - watch
  - list
- apiGroups: ["coordination.k8s.io"]
  resources:
  - leases
  verbs:
  - get
  - create
  - update
- nonResourceURLs:
  - "/metrics"
  verbs:
  - get
- apiGroups: ["extensions"]
  resources:
    - replicasets
  verbs:
  - "get"
  - "list"
  - "watch"
- apiGroups:
  - "apps"
  resources:
  - statefulsets
  - deployments
  - replicasets
  verbs:
  - "get"
  - "list"
  - "watch"
- apiGroups:
  - ""
  resources:
  - nodes/stats
  verbs:
  - get
- apiGroups:
  - "batch"
  resources:
  - jobs
  verbs:
  - "get"
  - "list"
  - "watch"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: elastic-agent-logs
subjects:
- kind: ServiceAccount
  name: elastic-agent-logs
  namespace: monitoring-tools-poc
roleRef:
  kind: ClusterRole
  name: elastic-agent-logs
  apiGroup: rbac.authorization.k8s.io
